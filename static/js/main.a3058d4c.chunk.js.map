{"version":3,"sources":["components/dashboard/Header.js","components/question-answer/QuestionAnswerDetailView.js","components/question-answer/QuestionAnswerItems.js","components/question-answer/Categories.js","components/question-answer/QuestionAnswerContainer.js","components/dashboard/Home.js","utils/helper.js","store/actions/QuestionAnswerAction.js","constants/ActionTypes.js","App.js","reportWebVitals.js","store/reducers/QuestionAnswerReducer.js","store/reducers/index.js","store/index.js","index.js","assets/sdi1-modified.svg","assets/bismillah.svg"],"names":["Header","React","createElement","className","src","sdiLogo","height","bismillah","DetailedView","props","question","answer","questionanswerDetails","Typography","statement","QuestionAnswerDetailView","answerId","handleModalClose","questionanswer","useSelector","store","questionAnswerById","Modal","open","onClose","ModalDialog","ModalClose","QuestionAnswer","questionAnswerItem","showAsnwer","Paper","elevation","Button","size","variant","color","onClick","id","QuestionAnswerItems","questionAnswerItems","setAnswerId","useState","map","Categories","AccordionGroup","transition","sx","borderRadius","concat","accordionDetailsClasses","content","expanded","paddingBlock","accordionSummaryClasses","button","Object","keys","key","categoriesItem","category","description","questionAnswers","Accordion","AccordionSummary","Avatar","AccountBalanceIcon","ListItemContent","level","AccordionDetails","Stack","spacing","NoQuestionAnswerAvailable","QuestionAnswerContainer","Fragment","length","Home","dispatch","useDispatch","quetionAnswer","setQuetionAnswer","questionAnswerGroupByCategory","setQuestionAnswerGroupByCategory","useEffect","parsedQuetionAnswer","getParsedQuetionAnswer","JSON","parse","stringify","questionAnswerData","Array","isArray","forEach","item","questionAnsweritemGroupByCategory","quetionAnswerGroupByCategory","push","getQuetionAnswerGroupByCategory","type","payload","SearchIcon","placeholder","ClearIcon","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","QuestionAnswerReducer","state","arguments","undefined","action","rootReducer","history","combineReducers","router","createRouterMiddleware","createBrowserHistory","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","HashRouter","module","exports"],"mappings":"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","file":"static/js/main.a3058d4c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './header.css';\r\nimport sdiLogo from '../../assets/sdi1-modified.svg'\r\nimport bismillah from '../../assets/bismillah.svg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header-container'>\r\n      <div className=\"header-logo-section\">\r\n        <img src={sdiLogo} height={'100%'}/>\r\n      </div>\r\n      <div className=\"header-logo-section\">\r\n        <img src={bismillah} height={'100%'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Modal from \"@mui/joy/Modal\";\r\nimport ModalClose from \"@mui/joy/ModalClose\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport { ModalDialog } from \"@mui/joy\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DetailedView = (props) => {\r\n  const { question, answer } = props?.questionanswerDetails;\r\n  return (\r\n    <div className=\"detailed-view-container\">\r\n      <div>\r\n        <Typography>{question?.statement}</Typography>\r\n      </div>\r\n      <div>\r\n        <Typography>{answer?.statement}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionAnswerDetailView = (props) => {\r\n  const { answerId, handleModalClose } = props;\r\n\r\n  const questionanswer = useSelector((store) => store.questionanswer);\r\n  const { questionAnswerById } = questionanswer;\r\n  const questionanswerDetails = questionAnswerById[answerId];\r\n\r\n  return (\r\n    <div>\r\n      <Modal open={answerId !== null} onClose={handleModalClose}>\r\n        <ModalDialog>\r\n          <ModalClose />\r\n          {questionanswerDetails ? (\r\n            <DetailedView questionanswerDetails={questionanswerDetails}/>\r\n          ) : (\r\n            <div>\r\n              <Typography>No answer available</Typography>\r\n            </div>\r\n          )}\r\n        </ModalDialog>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerDetailView;\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport \"./question-answer-items.css\";\r\nimport { Button } from \"@mui/joy\";\r\nimport QuestionAnswerDetailView from \"./QuestionAnswerDetailView\";\r\n\r\nconst QuestionAnswer = (props) => {\r\n  const { questionAnswerItem, showAsnwer } = props;\r\n  const { question, answer } = questionAnswerItem;\r\n\r\n  const handleShowAsnwer = (questionAnswerItemClicked) => {\r\n    showAsnwer(questionAnswerItemClicked.id);\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper elevation={3} className=\"question-answer-item\">\r\n        <div className=\"question-answer-item-inner-container\">\r\n          <span className=\"question\">{question.statement}</span>\r\n\r\n          <span className=\"show-answer\">\r\n            <Button\r\n              size=\"md\"\r\n              variant={\"solid\"}\r\n              color=\"primary\"\r\n              onClick={() => handleShowAsnwer(questionAnswerItem)}\r\n            >\r\n              Read More\r\n            </Button>\r\n          </span>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionAnswerItems = (props) => {\r\n  const { questionAnswerItems = [] } = props;\r\n  const [answerId, setAnswerId] = useState(null);\r\n\r\n  const showAsnwer = (answerId) => {\r\n    setAnswerId(answerId);\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setAnswerId(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-answer-items-main-container\">\r\n      {questionAnswerItems.map((questionAnswerItem) => {\r\n        return <QuestionAnswer questionAnswerItem={questionAnswerItem} showAsnwer={showAsnwer} />;\r\n      })}\r\n\r\n      <QuestionAnswerDetailView answerId={answerId} handleModalClose={handleModalClose}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerItems;\r\n","import React from \"react\";\r\nimport \"./categories.css\";\r\nimport QuestionAnswerItems from \"./QuestionAnswerItems\";\r\n\r\nimport Accordion from \"@mui/joy/Accordion\";\r\nimport AccordionGroup from \"@mui/joy/AccordionGroup\";\r\nimport AccordionDetails, {\r\n  accordionDetailsClasses,\r\n} from \"@mui/joy/AccordionDetails\";\r\nimport AccordionSummary, {\r\n  accordionSummaryClasses,\r\n} from \"@mui/joy/AccordionSummary\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Avatar from \"@mui/joy/Avatar\";\r\nimport ListItemContent from \"@mui/joy/ListItemContent\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\n\r\nconst Categories = (props) => {\r\n  const { questionAnswerItems } = props;\r\n  const categories = [\r\n    {\r\n      category: \"c1\",\r\n      description: \"d1\",\r\n      qa: [\r\n        { q: \"q1\", a: \"a1\" },\r\n        { q: \"q2\", a: \"a2\" },\r\n        { q: \"q3\", a: \"a3\" },\r\n      ],\r\n    },\r\n    {\r\n      category: \"c2\",\r\n      description: \"d2\",\r\n      qa: [\r\n        { q: \"q1\", a: \"a1\" },\r\n        { q: \"q2\", a: \"a2\" },\r\n        { q: \"q3\", a: \"a3\" },\r\n      ],\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"categories-container\">\r\n      <AccordionGroup\r\n        variant=\"outlined\"\r\n        transition=\"0.2s\"\r\n        sx={{\r\n          borderRadius: \"md\",\r\n          [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\r\n            {\r\n              paddingBlock: \"1rem\",\r\n            },\r\n          [`& .${accordionSummaryClasses.button}`]: {\r\n            paddingBlock: \"1rem\",\r\n          },\r\n        }}\r\n      >\r\n        {Object.keys(questionAnswerItems).map((key) => {\r\n          const categoriesItem = questionAnswerItems[key];\r\n          const { category, description, questionAnswers } = categoriesItem;\r\n\r\n          return (\r\n            <Accordion>\r\n              <AccordionSummary>\r\n                <Avatar>\r\n                  <AccountBalanceIcon />\r\n                </Avatar>\r\n                <ListItemContent>\r\n                  <Typography level=\"title-md\">{category}</Typography>\r\n                  <Typography level=\"body-sm\">{description}</Typography>\r\n                </ListItemContent>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Stack spacing={1.5}>\r\n                  <QuestionAnswerItems questionAnswerItems={questionAnswers} />\r\n                </Stack>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </AccordionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport \"./question-answer-container.css\";\r\nimport Categories from \"./Categories\";\r\n\r\nconst NoQuestionAnswerAvailable = () => {\r\n  return (\r\n    <div className=\"no-data-to-show\">\r\n      <span>Pls modify the seach keywords</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionAnswerContainer = (props) => {\r\n  const { questionAnswerItems } = props;\r\n  return (\r\n    <>\r\n      <div className=\"question-answer-container\">\r\n        {Object.keys(questionAnswerItems).length === 0 ? (\r\n          <NoQuestionAnswerAvailable />\r\n        ) : (\r\n          <Categories questionAnswerItems={questionAnswerItems}/>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\n\r\nimport \"./home.css\";\r\nimport Header from \"./Header\";\r\nimport QuestionAnswerContainer from \"../question-answer/QuestionAnswerContainer\";\r\nimport {\r\n  getParsedQuetionAnswer,\r\n  getQuetionAnswerGroupByCategory,\r\n} from \"../../utils/helper\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setQAById } from \"../../store/actions/QuestionAnswerAction\";\r\n\r\nconst palceholderForSearch = `type the questions`;\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const [quetionAnswer, setQuetionAnswer] = useState({});\r\n  const [questionAnswerGroupByCategory, setQuestionAnswerGroupByCategory] =\r\n    useState({});\r\n\r\n  useEffect(() => {\r\n    const parsedQuetionAnswer = getParsedQuetionAnswer();\r\n    const questionAnsweritemGroupByCategory =\r\n      getQuetionAnswerGroupByCategory(parsedQuetionAnswer);\r\n    setQuetionAnswer(parsedQuetionAnswer);\r\n    setQuestionAnswerGroupByCategory(questionAnsweritemGroupByCategory);\r\n\r\n    dispatch(setQAById(parsedQuetionAnswer));\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"home-container\">\r\n        {/* search-bar */}\r\n        <div className=\"search-bar-container\">\r\n          <span className=\"search-icon-container\">\r\n            <SearchIcon />\r\n          </span>\r\n          <input\r\n            className=\"search-bar-input-field\"\r\n            placeholder={palceholderForSearch}\r\n          />\r\n\r\n          <span className=\"search-icon-container\">\r\n            <ClearIcon />\r\n          </span>\r\n        </div>\r\n\r\n        {/* question-answer section */}\r\n        <QuestionAnswerContainer\r\n          questionAnswerItems={questionAnswerGroupByCategory}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import questionAnswerData from \"../assets/questions-answer.json\";\r\n\r\nexport const getParsedQuetionAnswer = () => {\r\n  const questionAnswerItems = JSON.parse(JSON.stringify(questionAnswerData));\r\n  const parsedQuetionAnswer = {};\r\n  if (Array.isArray(questionAnswerItems)) {\r\n    questionAnswerItems.forEach((item) => {\r\n      const { id } = item;\r\n      parsedQuetionAnswer[id] = {\r\n        ...item,\r\n      };\r\n    });\r\n  }\r\n  return parsedQuetionAnswer;\r\n};\r\n\r\nexport const getQuetionAnswerGroupByCategory = (parsedQuetionAnswer) => {\r\n  const quetionAnswerGroupByCategory = {};\r\n\r\n  if (parsedQuetionAnswer) {\r\n    Object.keys(parsedQuetionAnswer).forEach((key) => {\r\n      const item = parsedQuetionAnswer[key];\r\n      const { category } = item;\r\n      if(!quetionAnswerGroupByCategory[category]) {\r\n        quetionAnswerGroupByCategory[category] = {\r\n          category: item.category,\r\n          description: item.description,\r\n          questionAnswers: []\r\n        }\r\n      }\r\n      quetionAnswerGroupByCategory[category].questionAnswers.push(item);\r\n    });\r\n  }\r\n  return quetionAnswerGroupByCategory;\r\n};\r\n","import { SET_QUESTION_ANSWER_BY_ID } from \"../../constants/ActionTypes\";\r\n\r\nexport const setQAById = (questionAnswerById) => {\r\n  return (dispatch) => {\r\n    const payload = questionAnswerById;\r\n    dispatch({ type: SET_QUESTION_ANSWER_BY_ID, payload });\r\n  };\r\n};\r\n","export const SET_QUESTION_ANSWER_BY_ID = \"SET_QUESTION_ANSWER_BY_ID\";\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/dashboard/Home\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_QUESTION_ANSWER_BY_ID } from \"../../constants/ActionTypes\";\r\n\r\nconst initialState = {\r\n  questionAnswerById: {},\r\n};\r\n\r\nconst QuestionAnswerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_QUESTION_ANSWER_BY_ID:\r\n      return {\r\n        ...state,\r\n        questionAnswerById: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default QuestionAnswerReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { createRouterMiddleware } from \"@lagunovsky/redux-react-router\";\r\nimport QuestionAnswerReducer from \"./QuestionAnswerReducer\";\r\n\r\nconst rootReducer = (history) =>\r\n  combineReducers({\r\n    router: createRouterMiddleware(history),\r\n    questionanswer: QuestionAnswerReducer,\r\n  });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createRouterMiddleware } from \"@lagunovsky/redux-react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst enhancers = [];\r\nconst middleware = [thunk, createRouterMiddleware(history)];\r\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n  rootReducer(history),\r\n  initialState,\r\n  composedEnhancers\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { history, store } from \"./store\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App history={history} />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/sdi1-modified.d72d973f.svg\";","module.exports = __webpack_public_path__ + \"static/media/bismillah.e09ec57b.svg\";"],"sourceRoot":""}