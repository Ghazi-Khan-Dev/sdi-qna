{"version":3,"sources":["components/dashboard/Header.js","components/question-answer/QuestionAnswerDetailView.js","components/question-answer/QuestionAnswerItems.js","components/question-answer/Categories.js","components/question-answer/QuestionAnswerContainer.js","components/dashboard/Home.js","utils/helper.js","App.js","reportWebVitals.js","index.js"],"names":["Header","React","createElement","className","QuestionAnswerDetailView","props","answerId","handleModalClose","Modal","open","onClose","ModalDialog","ModalClose","Typography","QuestionAnswer","questionAnswerItem","showAsnwer","question","answer","Paper","elevation","statement","Button","size","variant","color","onClick","id","QuestionAnswerItems","questionAnswerItems","setAnswerId","useState","map","Categories","AccordionGroup","transition","sx","borderRadius","concat","accordionDetailsClasses","content","expanded","paddingBlock","accordionSummaryClasses","button","Object","keys","key","categoriesItem","category","description","questionAnswers","Accordion","AccordionSummary","Avatar","AccountBalanceIcon","ListItemContent","level","AccordionDetails","Stack","spacing","NoQuestionAnswerAvailable","QuestionAnswerContainer","Fragment","length","Home","quetionAnswer","setQuetionAnswer","questionAnswerGroupByCategory","setQuestionAnswerGroupByCategory","useEffect","parsedQuetionAnswer","getParsedQuetionAnswer","JSON","parse","stringify","questionAnswerData","Array","isArray","forEach","item","questionAnsweritemGroupByCategory","quetionAnswerGroupByCategory","push","console","log","getQuetionAnswerGroupByCategory","SearchIcon","placeholder","ClearIcon","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","HashRouter"],"mappings":"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","file":"static/js/main.d743dd2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header-container'>\r\n    Testing\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Modal from \"@mui/joy/Modal\";\r\nimport ModalClose from \"@mui/joy/ModalClose\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport { ModalDialog } from \"@mui/joy\";\r\n\r\nconst QuestionAnswerDetailView = (props) => {\r\n  const { answerId, handleModalClose } = props;\r\n  return (\r\n    <div>\r\n      <Modal open={answerId !== null} onClose={handleModalClose}>\r\n        <ModalDialog>\r\n          <ModalClose />\r\n          <Typography>{answerId}</Typography>\r\n        </ModalDialog>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerDetailView;\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nimport \"./question-answer-items.css\";\r\nimport { Button } from \"@mui/joy\";\r\nimport QuestionAnswerDetailView from \"./QuestionAnswerDetailView\";\r\n\r\nconst QuestionAnswer = (props) => {\r\n  const { questionAnswerItem, showAsnwer } = props;\r\n  const { question, answer } = questionAnswerItem;\r\n\r\n  const handleShowAsnwer = (questionAnswerItemClicked) => {\r\n    showAsnwer(questionAnswerItemClicked.id);\r\n  };\r\n  return (\r\n    <div>\r\n      <Paper elevation={3} className=\"question-answer-item\">\r\n        <div className=\"question-answer-item-inner-container\">\r\n          <span className=\"question\">{question.statement}</span>\r\n\r\n          <span className=\"show-answer\">\r\n            <Button\r\n              size=\"md\"\r\n              variant={\"solid\"}\r\n              color=\"primary\"\r\n              onClick={() => handleShowAsnwer(questionAnswerItem)}\r\n            >\r\n              Read More\r\n            </Button>\r\n          </span>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionAnswerItems = (props) => {\r\n  const { questionAnswerItems = [] } = props;\r\n  const [answerId, setAnswerId] = useState(null);\r\n\r\n  const showAsnwer = (answerId) => {\r\n    setAnswerId(answerId);\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setAnswerId(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"question-answer-items-main-container\">\r\n      {questionAnswerItems.map((questionAnswerItem) => {\r\n        return <QuestionAnswer questionAnswerItem={questionAnswerItem} showAsnwer={showAsnwer} />;\r\n      })}\r\n\r\n      <QuestionAnswerDetailView answerId={answerId} handleModalClose={handleModalClose}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerItems;\r\n","import React from \"react\";\r\nimport \"./categories.css\";\r\nimport QuestionAnswerItems from \"./QuestionAnswerItems\";\r\n\r\nimport Accordion from \"@mui/joy/Accordion\";\r\nimport AccordionGroup from \"@mui/joy/AccordionGroup\";\r\nimport AccordionDetails, {\r\n  accordionDetailsClasses,\r\n} from \"@mui/joy/AccordionDetails\";\r\nimport AccordionSummary, {\r\n  accordionSummaryClasses,\r\n} from \"@mui/joy/AccordionSummary\";\r\nimport Stack from \"@mui/joy/Stack\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport Avatar from \"@mui/joy/Avatar\";\r\nimport ListItemContent from \"@mui/joy/ListItemContent\";\r\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\r\n\r\nconst Categories = (props) => {\r\n  const { questionAnswerItems } = props;\r\n  const categories = [\r\n    {\r\n      category: \"c1\",\r\n      description: \"d1\",\r\n      qa: [\r\n        { q: \"q1\", a: \"a1\" },\r\n        { q: \"q2\", a: \"a2\" },\r\n        { q: \"q3\", a: \"a3\" },\r\n      ],\r\n    },\r\n    {\r\n      category: \"c2\",\r\n      description: \"d2\",\r\n      qa: [\r\n        { q: \"q1\", a: \"a1\" },\r\n        { q: \"q2\", a: \"a2\" },\r\n        { q: \"q3\", a: \"a3\" },\r\n      ],\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"categories-container\">\r\n      <AccordionGroup\r\n        variant=\"outlined\"\r\n        transition=\"0.2s\"\r\n        sx={{\r\n          borderRadius: \"md\",\r\n          [`& .${accordionDetailsClasses.content}.${accordionDetailsClasses.expanded}`]:\r\n            {\r\n              paddingBlock: \"1rem\",\r\n            },\r\n          [`& .${accordionSummaryClasses.button}`]: {\r\n            paddingBlock: \"1rem\",\r\n          },\r\n        }}\r\n      >\r\n        {Object.keys(questionAnswerItems).map((key) => {\r\n          const categoriesItem = questionAnswerItems[key];\r\n          const { category, description, questionAnswers } = categoriesItem;\r\n\r\n          return (\r\n            <Accordion>\r\n              <AccordionSummary>\r\n                <Avatar>\r\n                  <AccountBalanceIcon />\r\n                </Avatar>\r\n                <ListItemContent>\r\n                  <Typography level=\"title-md\">{category}</Typography>\r\n                  <Typography level=\"body-sm\">{description}</Typography>\r\n                </ListItemContent>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Stack spacing={1.5}>\r\n                  <QuestionAnswerItems questionAnswerItems={questionAnswers} />\r\n                </Stack>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </AccordionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\nimport \"./question-answer-container.css\";\r\nimport Categories from \"./Categories\";\r\n\r\nconst NoQuestionAnswerAvailable = () => {\r\n  return (\r\n    <div className=\"no-data-to-show\">\r\n      <span>Pls modify the seach keywords</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst QuestionAnswerContainer = (props) => {\r\n  const { questionAnswerItems } = props;\r\n  return (\r\n    <>\r\n      <div className=\"question-answer-container\">\r\n        {Object.keys(questionAnswerItems).length === 0 ? (\r\n          <NoQuestionAnswerAvailable />\r\n        ) : (\r\n          <Categories questionAnswerItems={questionAnswerItems}/>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionAnswerContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\nimport \"./home.css\";\r\nimport Header from \"./Header\";\r\nimport QuestionAnswerContainer from \"../question-answer/QuestionAnswerContainer\";\r\nimport { getParsedQuetionAnswer, getQuetionAnswerGroupByCategory } from \"../../utils/helper\";\r\n\r\nconst palceholderForSearch =`type the questions`;\r\n\r\nconst Home = () => {\r\n\r\n  const [quetionAnswer, setQuetionAnswer] = useState({});\r\n  const [questionAnswerGroupByCategory, setQuestionAnswerGroupByCategory] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    const parsedQuetionAnswer = getParsedQuetionAnswer();\r\n    const questionAnsweritemGroupByCategory = getQuetionAnswerGroupByCategory(parsedQuetionAnswer);\r\n    setQuetionAnswer(parsedQuetionAnswer);\r\n    setQuestionAnswerGroupByCategory(questionAnsweritemGroupByCategory);\r\n\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"home-container\">\r\n\r\n        {/* search-bar */}\r\n        <div className=\"search-bar-container\">\r\n          <span className=\"search-icon-container\">\r\n            <SearchIcon />\r\n          </span>\r\n          <input className=\"search-bar-input-field\" placeholder={palceholderForSearch}/>\r\n\r\n          <span className=\"search-icon-container\">\r\n            <ClearIcon />\r\n          </span>\r\n        </div>\r\n\r\n        {/* question-answer section */}\r\n        <QuestionAnswerContainer questionAnswerItems = {questionAnswerGroupByCategory} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import questionAnswerData from \"../assets/questions-answer.json\";\r\n\r\nexport const getParsedQuetionAnswer = () => {\r\n  const questionAnswerItems = JSON.parse(JSON.stringify(questionAnswerData));\r\n  const parsedQuetionAnswer = {};\r\n  if (Array.isArray(questionAnswerItems)) {\r\n    questionAnswerItems.forEach((item) => {\r\n      const { id } = item;\r\n      parsedQuetionAnswer[id] = {\r\n        ...item,\r\n      };\r\n    });\r\n  }\r\n  return parsedQuetionAnswer;\r\n};\r\n\r\nexport const getQuetionAnswerGroupByCategory = (parsedQuetionAnswer) => {\r\n  const quetionAnswerGroupByCategory = {};\r\n\r\n  if (parsedQuetionAnswer) {\r\n    Object.keys(parsedQuetionAnswer).forEach((key) => {\r\n      const item = parsedQuetionAnswer[key];\r\n      const { category } = item;\r\n      if(!quetionAnswerGroupByCategory[category]) {\r\n        quetionAnswerGroupByCategory[category] = {\r\n          category: item.category,\r\n          description: item.description,\r\n          questionAnswers: []\r\n        }\r\n      }\r\n      quetionAnswerGroupByCategory[category].questionAnswers.push(item);\r\n    });\r\n  }\r\n  console.log('parsedQuetionAnswer - ', quetionAnswerGroupByCategory);\r\n  return quetionAnswerGroupByCategory;\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/dashboard/Home\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}